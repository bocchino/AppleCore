# -----------------------------------
# EDIFY: DISK OPERATIONS
# -----------------------------------
# DELETE FILE FROM DISK, IF THERE
# -----------------------------------
FN DELETE_FILE() {
  PRINT_STRING(DOS_DELETE);
  PRINT_STRING(@FILE_NAME);
  MON_CROUT();
}
# -----------------------------------
# WRITE BUFFER TO DISK
# -----------------------------------
FN WRITE_BUFFER() {
  VAR I:2=0;
  VAR LINE_PTR:@=BUF_START;
  DELETE_FILE();
  ISSUE_DOS_CMD(DOS_OPEN,@FILE_NAME);
  ISSUE_DOS_CMD(DOS_WRITE,@FILE_NAME);
  IF (NOT ERR_FLAG) {
    WHILE (I < BUF_SIZE) {
      PRINT_STRING(LINE_PTR+1);
      MON_CROUT();
      NEXT_LINE_PTR(@LINE_PTR);
      INCR I;
    }
    PRINT_STRING(DOS_CLOSE);
  }
}
# -----------------------------------
# READ LINES FROM DISK
# -----------------------------------
DATA READ  "READ ";
DATA LINES " LINES\$0D";

# LENGTH OF LINE READ
VAR READ_LEN:1;

FN READ_AND_APPEND() {
  READ_LINES(READ_APPEND);
}

FN READ_APPEND() {
  BUF_APPEND_LINE(MON_IN,READ_LEN);
}

FN READ_AND_INSERT() {
  READ_LINES(READ_INSERT);
}

FN READ_INSERT() {
  BUF_INSERT_LINE(MON_IN,READ_LEN);
}

FN READ_LINES(READ_FN:@) {
  VAR NUM_READ:2=0;
  ISSUE_DOS_CMD(DOS_OPEN,@FILE_NAME);
  ISSUE_DOS_CMD(DOS_READ,@FILE_NAME);
  IF (NOT ERR_FLAG) {
    WHILE (DOS_ERRNO[0,1]=0 AND NOT ERR_FLAG) {
      SET READ_LEN=READ_LINE();
      MON_CROUT();
      IF (DOS_ERRNO[0,1]=0) {
        READ_FN();
	INCR NUM_READ;
      }
    }
    PRINT_STRING(DOS_CLOSE);
    PRINT_STRING(READ);
    PRINT_NUM(NUM_READ);
    PRINT_STRING(LINES);
  }
}
# -----------------------------------
# ISSUE A DOS COMMAND
# -----------------------------------
FN ISSUE_DOS_CMD(CMD:@,FNAME:@) {
  VAR ERR:1;
  IF (NOT ERR_FLAG) {
    SET DOS_ERRNO[0,1]=0;
    PRINT_STRING(CMD);
    PRINT_STRING(FNAME);
    MON_CROUT();
    SET ERR=DOS_ERRNO[0,1];
    IF (ERR=DOS_NOT_FOUND)
      ERROR(FILE_NOT_FOUND);
    ELSE IF (ERR > 0)
      ERROR(DISK_ERROR);
  }
}
