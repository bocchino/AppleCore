# -----------------------------------
# BELOW THE BASEMENT: MODULES
# -----------------------------------
# INDICES PER MODULE
# -----------------------------------
CONST MODULE_SIZE        5;
# -----------------------------------
# STRING CONSTRUCTION INFO
# -----------------------------------
DATA OBJ_STR ".OBJ";

VAR NUM_STR:3;
VAR FILE_NAME:15;

VAR MODULE:1;
VAR OFFSET:1;
# -----------------------------------
# SET MODULE AND OFFSET
# -----------------------------------
FN SET_MODULE_TO(IDX:1) {
  SET MODULE=IDX/MODULE_SIZE;
  SET OFFSET=IDX-MODULE_SIZE*
    MODULE;
}
# -----------------------------------
# LOAD MODULE FOR ROOM
# -----------------------------------
DATA RMS_STR "ROOMS.";

FN LOAD_RM_MODULE_FOR(RM:1):1 {
  SET_MODULE_TO(RM);
  IF (NOT (GET_RM_MODULE()=MODULE)) {
    SET (@FILE_NAME)[0,6]=RMS_STR[0,6];
    NUM_TO_STR(@MODULE,1,10,@FILE_NAME+6);
    SET (@FILE_NAME)[7,5]=OBJ_STR[0,5];
    RETURN ISSUE_DOS_CMD(DOS_BLOAD,@FILE_NAME);
  }
  RETURN TRUE;
}
# -----------------------------------
# GET CURRENT ROOM MODULE
# -----------------------------------
FN GET_RM_MODULE():1 {
  RETURN RM_MODULE[0,1];
}
# -----------------------------------
# LOAD MODULE FOR OBJECTS
# -----------------------------------
DATA OBJS_STR "OBJECTS.";

FN LOAD_OBJ_MODULE_FOR(OBJ:1):1 {
  SET_MODULE_TO(OBJ);
  IF (NOT (GET_OBJ_MODULE()=MODULE)) {
    SET (@FILE_NAME)[0,8]=OBJS_STR[0,8];
    NUM_TO_STR(@MODULE,1,10,@FILE_NAME+8);
    SET (@FILE_NAME)[9,5]=OBJ_STR[0,5];
    RETURN ISSUE_DOS_CMD(DOS_BLOAD,@FILE_NAME);
  }
  RETURN TRUE;
}
# -----------------------------------
# GET CURRENT OBJECT MODULE
# -----------------------------------
FN GET_OBJ_MODULE():1 {
  RETURN OBJ_MODULE[0,1];
}


