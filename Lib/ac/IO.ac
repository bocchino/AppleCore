# --------------------------------------
# THE APPLECORE LIBRARY, V1.0
# IO FUNCTIONS
# --------------------------------------
# READ KEYBOARD AND CLEAR STROBE
# --------------------------------------
FN:1 READ_KBD() {
  VAR CHAR:1=KBD_STROBE[0,1];
  IF (CHAR > $7F)
    SET CLEAR_KBD_STROBE[0,1]=0;
  RETURN CHAR;
}
# --------------------------------------
# WAS KEY PRESSED?
# --------------------------------------
FN:1 KEY_PRESSED() {
  RETURN READ_KBD() > $7F;
}
# --------------------------------------
# WAIT FOR KEYPRESS
# --------------------------------------
FN WAIT_KEYPRESS() {
  SET CLEAR_KBD_STROBE[0,1]=0;
  WHILE (NOT KEY_PRESSED()) {}
}
# --------------------------------------
# GET NULL-TERMINATED LINE INTO MON_IN
# RETURN - NUMBER OF CHARS READ
# --------------------------------------
FN:1 GET_LINE() {
  MON_GETLN1();
  SET MON_IN[^X,1]=0;
  RETURN ^X;
}
# --------------------------------------
# PRINT A CHARACTER VIA MON_COUT
# --------------------------------------
FN PRINT_CHAR(CHAR:1) {
  SET ^A = (CHAR OR $80);
  MON_COUT();
}
# --------------------------------------
# PRINT A STRING
# --------------------------------------
FN AVM_PRINT_STRING();

FN PRINT_STRING(STR_PTR:2) {
  SET ^X=(@STR_PTR)[0,1];
  SET ^A=(@STR_PTR)[1,1];
  AVM_PRINT_STRING();
}
# --------------------------------------
# PRINT A NUMBER AS HEX DIGITS
# --------------------------------------
FN PRINT_HEX(N_PTR:@,SIZE:1) {
   VAR I:1=SIZE;
   WHILE (I > 0) {
     SET ^A=N_PTR[I-1,1];
     MON_PRBYTE();
     DECR I;
   }
} 
# --------------------------------------
# SET INVERSE VIDEO
# --------------------------------------
FN INVERSE() {
  SET MON_INVFLG[0,1]=$3F;
}
# --------------------------------------
# SET FLASHING VIDEO
# --------------------------------------
FN FLASH() {
  SET MON_INVFLG[0,1]=$7F;
}
# --------------------------------------
# SET NORMAL VIDEO
# --------------------------------------
FN NORMAL() {
  SET MON_INVFLG[0,1]=$FF;
}
# --------------------------------------
# PADDLE BUTTON DOWN?
# --------------------------------------
FN:1 PDL_BUTTON_DOWN(PDL:1) {
  RETURN PDL_BUTTON[PDL,1] > $7F;
}
# --------------------------------------
# SET TEXT MODE
# --------------------------------------
FN SET_TEXT() {
  SET PAGE_1[0,1]=0;
  SET TEXT[0,1]=0;
}
# --------------------------------------
# MANAGE TEXT WINDOW
# --------------------------------------
CONST MAX_WIDTH 40;
CONST MAX_HEIGHT 24;

FN:1 BOUND_WINDOW(VAL:1,MAX:1) {
  IF (VAL > MAX) SET VAL = MAX;
  RETURN VAL;
}
FN SET_WINDOW_LEFT(LEFT:1) {
  SET MON_WNDLFT[0,1]=
   BOUND_WINDOW(LEFT,MAX_WIDTH-1);
}
FN SET_WINDOW_WIDTH(WIDTH:1) {
  SET MON_WNDWDTH[0,1]=
   BOUND_WINDOW(WIDTH,
    MAX_WIDTH-MON_WNDLFT[0,1]);
}
FN SET_WINDOW_TOP(TOP:1) {
  SET TOP=BOUND_WINDOW(TOP,
   MAX_HEIGHT-1);
  IF (MON_WNDBTM[0,1] < TOP)
    SET MON_WNDBTM[0,1]=TOP;    
  SET MON_WNDTOP[0,1]=TOP;
}
FN SET_WINDOW_BOTTOM(BOT:1) {
  SET BOT=BOUND_WINDOW(BOT,MAX_HEIGHT);
  SET MON_WNDTOP[0,1]=
   BOUND_WINDOW(MON_WNDTOP[0,1],BOT-1);
  SET MON_WNDBTM[0,1]=BOT;
}
FN SET_FULL_SCREEN() {
  SET_WINDOW_LEFT(0);
  SET_WINDOW_WIDTH(MAX_WIDTH);
  SET_WINDOW_TOP(0);
  SET_WINDOW_BOTTOM(MAX_HEIGHT);
}
# --------------------------------------
# POSITION CURSOR
# --------------------------------------
FN POSITION_CURSOR(X:1,Y:1) {
  POSITION_CURSOR_X(X);
  POSITION_CURSOR_Y(Y);
}
FN POSITION_CURSOR_X(X:1) {
  SET X=BOUND_WINDOW(X,
   MON_WNDWDTH[0,1]-1);
  SET MON_CH[0,1]=X;
}
FN POSITION_CURSOR_Y(Y:1) {
  SET Y=BOUND_WINDOW(Y,MAX_HEIGHT-1);
  SET MON_CV[0,1]=Y;
  MON_VTAB();
}
