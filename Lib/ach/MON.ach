# --------------------------------------
# THE APPLECORE COMPILER, V1.0
# MONITOR CONSTANTS
# --------------------------------------
# ZERO PAGE STORAGE LOCATIONS
# --------------------------------------
# LEFT OF TEXT WINDOW
CONST MON_WNDLFT		$20;
# WIDTH OF TEXT WINDOW
CONST MON_WNDWDTH		$21;
# TOP OF TEXT WINDOW
CONST MON_WNDTOP		$22;
# BOTTOM OF TEXT WINDOW
CONST MON_WNDBTM		$23;
# CURSOR HORIZONTAL POSITION
CONST MON_CH			$24;
# CURSOR VERTICAL POSITION
CONST MON_CV			$25;
# LENGTH OF LINE FOR MON_HLINE
CONST MON_H2			$2C;
# LENGTH OF LINE FOR MON_VLINE
CONST MON_V2			$2D;
# INVERSE TEXT FLAG
CONST MON_INVFLG                $32;
# PROMPT DISPLAYED BY MON.GETLN
CONST MON_PROMPT                $33;
# RANDOM NUMBER SEEDED BY MON.KEYIN
CONST MON_RNDL                  $4E;
CONST MON_RNDH                  $4F;
# --------------------------------------
# STACK
# --------------------------------------
CONST MON_STACK			$100;
# --------------------------------------
# INPUT BUFFER
# --------------------------------------
CONST MON_IN			$200;
# --------------------------------------
# SUBROUTINE ENTRY POINTS
# --------------------------------------
# PRINT LO-RES BLOCK AT (Y,A)
CONST MON_PLOT			$F800;
# DRAW LINE FROM (Y,A) TO (MON_H2,A)
CONST MON_HLINE			$F819;
# DRAW LINE FROM (Y,A) TO (Y,MON_V2)
CONST MON_VLINE			$F828;
# CLEAR LO-RES SCREEN
CONST MON_CLRSCR		$F832;
# CLEAR TOP OF LO-RES SCREEN
CONST MON_CLRTOP		$F836;
# SET LO-RES GRAPHICS COLOR
CONST MON_SETCOL		$F864;
# READ LO-RES SCREEN AT (Y,A) INTO A
CONST MON_SCRN	     	        $F871;
# PRINT A,X AS HEX DIGITS
CONST MON_PRNTAX		$F941;
# PRINT # OF BLANKS SPECIFIED IN X-REG
CONST MON_PRBL2	    	      	$F94A;
# READ GAME CONTROLLER GIVEN BY X
CONST MON_PREAD	       	      	$FB1E;
# BEEP SPEAKER
CONST MON_BELL1			$FBDD;
# SET MON_BASL,H FROM MON_CV
CONST MON_VTAB			$FC22;
# CLEAR FROM CURSOR TO END OF PAGE
CONST MON_CLREOP		$FC42;
# CLEAR SCREEN AND REPOSITION CURSOR
CONST MON_HOME                  $FC58;
# GET CHARACTER VIA MON_KSW
CONST MON_RDKEY                 $FD0C;
# GET CHARACTER FROM KEYBOARD
CONST MON_KEYIN                 $FD1B;
# LINE INPUT
CONST MON_GETLN1		$FD6F; 
# OUTPUT A-REG AS ASCII VIA MON_CSW
CONST MON_COUT	  		$FDED;
# PRINT A-REG AS HEX DIGITS
CONST MON_PRBYTE		$FDDA;
# SEND ASCII CR ($8D) TO COUT
CONST MON_CROUT			$FD8E;

