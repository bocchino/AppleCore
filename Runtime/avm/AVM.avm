:NEW
* -------------------------------
* THE APPLECORE COMPILER, V1.0
* APPLECORE VIRTUAL MACHINE
* -------------------------------
* PROGRAM COUNTER
* -------------------------------
AVM.PCL	.EQ $3A
AVM.PCH .EQ $3B
* -------------------------------
* EXECUTE AN AVM FUNCTION
* -------------------------------
AVM.EXECUTE.FN
* SAVE ACC RETURN ADDRESS
	LDA AVM.PCL
	JSR ACC.PUSH.A
	LDA AVM.PCH
	JSR ACC.PUSH.A
* STORE PROGRAM COUNTER
	PLA
	STA AVM.PCL
	PLA
	STA AVM.PCH
* SAVE 6502 RETURN ADDRESS
	PLA
	JSR ACC.PUSH.A
	PLA
	JSR ACC.PUSH.A
* SAVE FP
	JSR ACC.PUSH.FP
* SET NEW FP
	JSR ACC.SET.FP.TO.SP
* INSTRUCTION LOOP
.1	JSR AVM.DO.INSTR
	JMP .1
* -------------------------------
* DO AN AVM INSTRUCTION
* -------------------------------
AVM.DO.INSTR
	JSR AVM.FETCH.BYTE
	STA ACC.IDX.1
	STA ACC.SIZE
	AND #$F8
	BEQ AVM.BRANCH
* -------------------------------
* SIZED OR SIGNED INSTRUCTION
* -------------------------------
	LSR
	LSR
	LSR
	CLC
	ADC #$07
	STA ACC.IDX.1
	CMP #$1C
	LDA ACC.SIZE
	BCS AVM.SIGNED
* -------------------------------
* SIZED
* -------------------------------
* GET SIZE
	AND #7
	BEQ AVM.FETCH.SIZE
	BNE AVM.STORE.SIZE
* -------------------------------
* SIGNED
* -------------------------------
AVM.SIGNED
* GET SIGN BIT
	AND #4
	LSR
	LSR
	TAX
* GET SIZE
	LDA ACC.SIZE
	AND #3
	BNE AVM.STORE.SIZE
AVM.FETCH.SIZE
 	JSR AVM.FETCH.BYTE
AVM.STORE.SIZE
	STA ACC.SIZE
* -------------------------------
* BRANCH TO HANDLER
* -------------------------------
AVM.BRANCH
	ASL ACC.IDX.1
	LDY ACC.IDX.1
	LDA AVM.INSTR.TBL+1,Y
	PHA
	LDA AVM.INSTR.TBL,Y
	PHA
	LDA ACC.SIZE
	RTS
* -------------------------------
* INSTRUCTION HANDLERS
* -------------------------------
AVM.BRK
	BRK
* -------------------------------
AVM.BRF	
	JSR ACC.POP.A
	AND #1
	BEQ AVM.BRU
* -------------------------------
* GET L,H INTO X,A
* -------------------------------
AVM.GET.L.H
	JSR AVM.FETCH.BYTE
	TAX
* -------------------------------
* INC PC AND FETCH INTO A
* -------------------------------
AVM.FETCH.BYTE
	JSR AVM.INC.PC
	LDY #0
	LDA (AVM.PCL),Y
	RTS
* -------------------------------
AVM.BRU
	JSR AVM.GET.L.H
	STA AVM.PCH
	STX AVM.PCL
	JMP AVM.DEC.PC
* -------------------------------
AVM.CFD
	JSR AVM.GET.L.H
	STA ACC.IP+1
	TXA
AVM.CFD.1
	STA ACC.IP
	JSR MON.RESTORE
	JSR AVM.CFD.2
	JMP MON.SAVE
AVM.CFD.2
	JMP (ACC.IP)
* -------------------------------
AVM.CFI
	JSR ACC.POP.A
	STA ACC.IP+1
	JSR ACC.POP.A
	JMP AVM.CFD.1
* -------------------------------
AVM.MTV
 	PHA
	JSR AVM.FETCH.BYTE
	TAX
	PLA
	TAY
	LDA $00,X
	STA (ACC.FP),Y
	RTS
* -------------------------------
AVM.PHC
	STA ACC.IDX.1
	BEQ .2
.1	JSR AVM.FETCH.BYTE
	JSR ACC.PUSH.A
	DEC ACC.IDX.1
	BNE .1
.2	RTS
* -------------------------------
AVM.RAF
* SAVE SIZE
	TAX
* SAVE PTR TO RETURN VALUE
	JSR AVM.DSP
	JSR ACC.SET.IP.TO.SP
* RESTORE SP
	JSR ACC.SET.SP.TO.FP
* RESTORE FP
	JSR ACC.POP.A
	STA ACC.FP+1
	JSR ACC.POP.A
	STA ACC.FP
* RESTORE 6502 RETURN ADDRESS
	JSR ACC.POP.A
	PHA
	JSR ACC.POP.A
	PHA
* RESTORE PROGRAM COUNTER
	JSR ACC.POP.A
	STA AVM.PCH
	JSR ACC.POP.A
	STA AVM.PCL
* EVALUATE RETURN VALUE
	STX ACC.SIZE
	BEQ .1
	JMP AVM.MTS.1
.1	RTS
* -------------------------------
AVM.VTM
 	PHA
	JSR AVM.FETCH.BYTE
	TAX
	PLA
	TAY
	LDA (ACC.FP),Y
	STA $00,X
	RTS
* -------------------------------
* INCREMENT AVM PC
* -------------------------------
AVM.INC.PC
	INC AVM.PCL
	BNE .1
	INC AVM.PCH
.1	RTS
* -------------------------------
* DECREMENT AVM PC
* -------------------------------
AVM.DEC.PC
	LDA AVM.PCL
	BNE .1
	DEC AVM.PCH
.1	DEC AVM.PCL
	RTS
* -------------------------------
* INSTRUCTION HANDLER ADDRESSES
* -------------------------------
AVM.INSTR.TBL
	.DA AVM.BRK-1	     BRK
	.DA AVM.BRF-1	     BRF
	.DA AVM.BRU-1	     BRU
	.DA AVM.CFD-1	     CFD
	.DA AVM.CFI-1	     CFI
	.DA AVM.BRK-1	     ???
	.DA AVM.BRK-1	     ???
	.DA AVM.BRK-1	     ???
	.DA AVM.ADD-1        ADD
	.DA AVM.ANL-1        ANL
	.DA AVM.DCR-1        DCR
	.DA AVM.DSP-1        DSP
	.DA AVM.ICR-1        ICR
	.DA AVM.ISP-1        ISP
	.DA AVM.MTS-1        MTS
	.DA AVM.MTV-1	     MTV
	.DA AVM.NEG-1        NEG
	.DA AVM.NOT-1        NOT
	.DA AVM.ORL-1        ORL
	.DA AVM.ORX-1        ORX
	.DA AVM.PHC-1        PHC
	.DA AVM.PVA-1        PVA
	.DA AVM.RAF-1	     RAF
	.DA AVM.SHL-1        SHL
	.DA AVM.STM-1        STM
	.DA AVM.SUB-1        SUB
	.DA AVM.TEQ-1        TEQ
	.DA AVM.VTM-1        VTM
	.DA AVM.DIV-1        DIV
	.DA AVM.EXT-1        EXT
	.DA AVM.MUL-1        MUL
	.DA AVM.SHR-1        SHR
	.DA AVM.TGE-1        TGE
	.DA AVM.TGT-1        TGT
	.DA AVM.TLE-1        TLE
	.DA AVM.TLT-1        TLT
	.DA AVM.BRK-1	     ???
	.DA AVM.BRK-1	     ???
	.DA AVM.BRK-1	     ???
