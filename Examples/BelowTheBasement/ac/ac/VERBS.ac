# -----------------------------------
# BELOW THE BASEMENT: VERBS
# -----------------------------------
# VERB CODES
# -----------------------------------
CONST VB_LOOK    0;
CONST VB_TAKE    1;
CONST VB_DROP    2;
CONST VB_USE     3;
CONST VB_SAY     4;
CONST VB_KILL    5;
CONST VB_OPEN    6;
CONST VB_READ    7;

CONST NUM_VB_NAMES 12;

DATA VB_NAMES VB_LOOK_NAME;
DATA          VB_SEARCH_NAME;
DATA          VB_EXAMINE_NAME;
DATA          VB_INSPECT_NAME;
DATA          VB_TAKE_NAME;
DATA          VB_GET_NAME;
DATA	      VB_DROP_NAME;
DATA          VB_USE_NAME;
DATA          VB_SAY_NAME;
DATA          VB_KILL_NAME;
DATA          VB_OPEN_NAME;
DATA	      VB_READ_NAME;

DATA VB_IDS   VB_LOOK;
DATA 	      VB_LOOK;
DATA	      VB_LOOK;
DATA	      VB_LOOK;
DATA	      VB_TAKE;
DATA	      VB_TAKE;
DATA	      VB_DROP;
DATA	      VB_USE;
DATA	      VB_SAY;
DATA	      VB_KILL;
DATA	      VB_OPEN;
DATA	      VB_READ;
  
DATA VB_LOOK_NAME    "LOOK";
DATA VB_SEARCH_NAME  "SEARCH";
DATA VB_EXAMINE_NAME "EXAMINE";
DATA VB_INSPECT_NAME "INSPECT";
DATA VB_TAKE_NAME    "TAKE";
DATA VB_GET_NAME     "GET";
DATA VB_DROP_NAME    "DROP";
DATA VB_USE_NAME     "USE";
DATA VB_SAY_NAME     "SAY";
DATA VB_KILL_NAME    "KILL";
DATA VB_OPEN_NAME    "OPEN";
DATA VB_READ_NAME    "READ";

DATA NOTHING_SPECIAL "THERE IS NOTHING SPECIAL ABOUT THE ";
DATA CANT_DO         "YOU CAN'T DO THAT RIGHT NOW.";

VAR VB:@;
VAR OBJ:@;

VAR VB_ID:1;
VAR OBJ_ID:1;

VAR RESPONDED:1=FALSE;

FN DO_VERB_PHRASE() {
  VAR VB_IDX:1;
  SET VB=(@WORDS)[0,2];
  SET OBJ=(@WORDS)[2,2];
  SET VB_IDX=FIND_WORD(VB,
    VB_NAMES,NUM_VB_NAMES);
  IF (VB_IDX=-1) {
    SHOW_CMDS();
    RETURN;
  }
  SET VB_ID=VB_IDS[VB_IDX,1];
  SET RESPONDED=FALSE;
  IF (VB_ID=VB_SAY)
    VB_SAY_FN();
  ELSE {
    SET OBJ_ID=FIND_OBJ(OBJ);
    IF (NOT (OBJ_ID=OBJ_NONE))
      DO_ACTION_ON(OBJ_ID);
    IF (NOT RESPONDED) {
      IF (VB_ID=VB_LOOK AND 
       NOT (OBJ_ID=OBJ_NONE)) {
	PRINT_WORDS(NOTHING_SPECIAL);
	PRINT_WORDS(OBJ_NAMES[4*OBJ_ID+2,2]);
	PRINT_CHAR('.');
      }
      ELSE PRINT_WORDS(CANT_DO);
    }
  }
}
# -----------------------------------
# PERFORM SAY
# -----------------------------------
DATA OKAY    "OKAY, ";
DATA NOTHING "NOTHING HAPPENED.";

FN VB_SAY_FN() {
  PRINT_WORDS(OKAY);
  PRINT_WORDS(OBJ);
  PRINT_CHAR('!');
  MON_CROUT();
  MON_CROUT();
  IF (CURRENT_RM=RM_FOYER)
    FOYER_SAY_FN();
  ELSE IF (CURRENT_RM=RM_DARK)
    DARK_SAY_FN();
  IF (NOT RESPONDED)
    RESPOND(NOTHING);
}

FN RESPOND(STR:@) {
  SET RESPONDED=TRUE;
  PRINT_WORDS(STR);
}
# -----------------------------------
# PERFORM OBJECT ACTION
# -----------------------------------
FN DO_ACTION_ON(OBJ:1) {
  VAR ACTION_FN:@;
  IF (VB_ID=VB_DROP)
    DROP_ACTION();
  ELSE IF (LOAD_OBJ_MODULE_FOR(OBJ)) {
    SET ACTION_FN=OBJ_ACTIONS[2*OFFSET,2];
    ACTION_FN();
  }
}
# -----------------------------------
# DEFAULT ACTION: DOES NOTHING
# -----------------------------------
FN DEFAULT_ACTION() {}
# -----------------------------------
# TAKE ACTION: TAKE AN OBJECT
# -----------------------------------
DATA TAKEN "TAKEN";
DATA TOO_MANY "YOU ARE CARRYING TOO MANY ITEMS.";

FN TAKE_ACTION() {
  IF (VB_ID=VB_TAKE) {
    IF (ADD_TO_INV()) {
      RESPOND(TAKEN);
      REMOVE_OBJ_FROM_RM();
    }
    ELSE RESPOND(TOO_MANY);
  }
}
# -----------------------------------
# PRINT MESSAGE WHEN OBJECT CAN'T
# BE TAKEN
# -----------------------------------
DATA TOO_HEAVY "IT IS TOO HEAVY.";
DATA FIXED     "IT IS FIXED IN PLACE.";

FN CANT_TAKE(MSG:@) {
  IF (VB_ID=VB_TAKE) RESPOND(MSG);
}
# -----------------------------------
# DROP ACTION: DROP AN OBJECT
# -----------------------------------
DATA DONT_HAVE "YOU DON'T HAVE IT.";
DATA DROPPED "DROPPED";

DATA HOARD "LET'S NOT HOARD EVERYTHING IN ONE ROOM.";

FN DROP_ACTION() {
  IF (INV_IDX=OBJ_NONE)
    RESPOND(DONT_HAVE);
  ELSE {
    IF (ADD_OBJ_TO_RM(FALSE)) {
      REMOVE_FROM_INV();
      RESPOND(DROPPED);
    }
    ELSE RESPOND(HOARD);
  }
}
# -----------------------------------
# PRINT MSG IF OBJECT LOOKED AT
# -----------------------------------
FN LOOK(MSG:@) {
  IF (VB_ID=VB_LOOK) RESPOND(MSG);
}
