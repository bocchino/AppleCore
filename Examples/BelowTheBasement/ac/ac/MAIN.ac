# -----------------------------------
# BELOW THE BASEMENT: MAIN
# -----------------------------------
FN MAIN() {
  # INIT GLOBAL DATA
  SET RM_MODULE[0,1]=$FF;
  SET OBJ_MODULE[0,1]=$FF;
  # PROCESS INPUT
  PROCESS_INPUT();
}
# -----------------------------------
# MAIN INPUT LOOP
# -----------------------------------
DATA TYPE_RET "\$0D\$0DTYPE RETURN FOR A LIST OF COMMANDS.\$0D";
DATA PROMPT   "COMMAND >";
DATA DIED_MSG "\$0DI AM SORRY, BUT YOU WERE KILLED. "\;
DATA 	      "BETTER LUCK NEXT TIME.\$0D";

FN PROCESS_INPUT() {
  VAR LEN:1;
  SET MON_PROMPT[0,1]=$80;
  PRINT_RM(CURRENT_RM);
  PRINT_WORDS(TYPE_RET);
  WHILE (NOT DONE) {
    MON_CROUT();
    PRINT_STRING(PROMPT);
    SET LEN=GET_LINE();
    IF (LEN > 0)
      PARSE_INPUT();  
    ELSE
      SHOW_CMDS();
    MON_CROUT();
    IF (NOT DONE) {
      HANDLE_BEAR();
      IF (NUM_HITS > MAX_HITS) {
        PRINT_WORDS(DIED_MSG);
        SET DONE=TRUE;
      }
    }
  }
}
# -----------------------------------
# HANDLE BEAR
# -----------------------------------
DATA LEAVE_BEAR "\$0DYOU LEAVE THE ROOM JUST IN TIME. "\;
DATA 		"THE BEAR DOESN'T SEEM INTERESTED IN PURSUING.\$0D";

DATA BEAR_ATTACKS "\$0DWHILE YOU ARE STANDING THERE, THE BEAR ATTACKS! "\;
DATA 		  "THE BEAR IS QUITE FEROCIOUS, AND IT'S ALL OVER FAIRLY QUICKLY.\$0D";

FN HANDLE_BEAR() {
  IF (BEAR_ALIVE) {
    IF (CURRENT_RM=RM_BEAR) {
      IF (NOT CONFRONTED_BEAR)
        SET CONFRONTED_BEAR=TRUE;
      ELSE {
        IF (NOT ATTACKED_BEAR) {
          RESPOND(BEAR_ATTACKS);
	  SET NUM_HITS=MAX_HITS+1;
        }
      }
    }
    ELSE {
      IF (CONFRONTED_BEAR)
        RESPOND(LEAVE_BEAR);
      SET CONFRONTED_BEAR=FALSE;
    }
    SET ATTACKED_BEAR=FALSE;
  }
}
# -----------------------------------
# TODO...
# -----------------------------------
DATA TODO_STR "TODO";

FN TODO() {
  PRINT_STRING(TODO_STR);
}

