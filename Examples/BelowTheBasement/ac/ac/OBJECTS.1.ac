# -----------------------------------
# BELOW THE BASEMENT: OBJECT MODULE 1
# -----------------------------------
# MODULE NUMBER
# -----------------------------------
DATA              1;
# -----------------------------------
# OBJECT ACTIONS
# -----------------------------------
DATA              STOPPER_ACTION;
DATA              GLASS_ACTION;
DATA		  CANOE_ACTION;
DATA		  TAKE_ACTION;
DATA		  HAMMER_ACTION;
# -----------------------------------
# OBJECT ACTION DATA
# -----------------------------------
DATA STOPPER_DESC "A RUBBER STOPPER, GOOD FOR PLUGGING HOLES.";
DATA PLUG_CANOE   "YOU PLUG UP THE HOLE IN THE CANOE WITH THE RUBBER STOPPER.";

FN STOPPER_ACTION() {
  IF (VB_ID=VB_LOOK) {
    RESPOND(STOPPER_DESC);
  }
  ELSE IF (VB_ID=VB_USE) {
    IF (FIND_OBJ_ID(OBJ_CANOE)) {
      RESPOND(PLUG_CANOE);
      SET CANOE_PLUGGED=TRUE;
      REMOVE_OBJ_ID(OBJ_STOPPER);
    }
  }
  ELSE TAKE_ACTION();
}    

DATA CANOE_1 "THE CANOE IS MADE OF FIBERGLASS. ";
DATA CANOE_2 "CAREFUL INSPECTION REVEALS A SMALL HOLE IN THE BOTTOM.";
DATA CANOE_3 "A SMALL HOLE IN THE BOTTOM IS PLUGGED WITH A RUBBER STOPPER.";

FN CANOE_ACTION() {
  IF (VB_ID=VB_LOOK) {
    RESPOND(CANOE_1);
    IF (NOT CANOE_PLUGGED)
      RESPOND(CANOE_2);
    ELSE
      RESPOND(CANOE_3);
  }
  ELSE IF (VB_ID=VB_USE) {
    IF (CANOE_HELD()) {
      IF (CURRENT_RM=RM_RESERVOIR)
        GO(NORTH);
      ELSE IF (CURRENT_RM=RM_BANK)
        GO(SOUTH);
    }
  }
  ELSE TAKE_ACTION();
}

DATA TRY_TAKING "TRY TAKING IT FIRST.";

FN:1 CANOE_HELD() {
  IF (NOT FIND_OBJ_ID_IN_INV(OBJ_CANOE)) {
    RESPOND(TRY_TAKING);
    RETURN FALSE;
  }
  RETURN TRUE;
}

DATA USE_GLASS "WITH THE HELP OF THE MAGNIFYING GLASS "\;
DATA 	       "YOU ARE ABLE TO READ THE INSCRIPTION ON THE DOOR. "\;
DATA	       "IT SAYS:\$0D\$0D"\;
DATA	       "  USE THE KEY AND HOLLER BEAR;\$0D"\;
DATA	       "  AND THEN YOU WILL BE HALFWAY THERE!";

FN GLASS_ACTION() {
  IF (VB_ID=VB_USE AND CURRENT_RM=RM_FOYER)
    RESPOND(USE_GLASS);
  TAKE_ACTION();
}

DATA WRONG_ANGLE "WITH THE DOOR CLOSED YOU CAN'T GET A GOOD ANGLE TO "\;
DATA 		 "USE THE HAMMER.";

DATA OBJECT_POPS "WITH A SHARP TAP OF THE HAMMER, THE METAL OBJECT "\;
DATA 		 "POPS OUT OF THE KEYHOLE.";

FN HAMMER_ACTION() {
  IF (CURRENT_RM=RM_JAIL AND NOT HAMMER_USED) {
    IF (NOT JAIL_OPEN)
      RESPOND(WRONG_ANGLE);
    ELSE {
      RESPOND(OBJECT_POPS);
      SET HAMMER_USED=TRUE;
      # MAKE METAL OBJECT VISIBLE
      FIND_OBJ_ID_IN_RM(OBJ_METAL);
      REMOVE_OBJ_FROM_RM();
      SET OBJ_ID=OBJ_METAL;
      ADD_OBJ_TO_RM(TRUE);
    }
  }
  TAKE_ACTION();
}