# -----------------------------------
# BELOW THE BASEMENT: ROOM ACCESS
# -----------------------------------
# DIRECTION CONSTANTS
# -----------------------------------
CONST NORTH 0;
CONST SOUTH 1;
CONST EAST  2;
CONST WEST  3;
CONST UP    4;
CONST DOWN  5;
# -----------------------------------
# ROOM IDENTIFIERS
# -----------------------------------
CONST RM_BASEMENT   0;
CONST RM_FEATHERS   1;
CONST RM_RUBBER     2;
CONST RM_CLOSET     3;
CONST RM_MUDDY      4;
CONST RM_BRIGHT     5;
CONST RM_RESERVOIR  6;
CONST RM_BANK       7;
CONST RM_FOYER      8;
CONST RM_DARK       9;
CONST RM_BARE       10;
CONST RM_JAIL       11;
CONST RM_GREASY     12;
CONST RM_BEAR       13;
CONST RM_HOT        14;
CONST RM_PIT_EDGE   15;
CONST RM_PIT_BOTTOM 16;
CONST RM_WIN        17;

CONST RM_ERROR	    -2;
CONST RM_NONE       -1;
# -----------------------------------
# EXTERN VARIABLE DECLARATION
# -----------------------------------
FN RMS_START();
# -----------------------------------
# LOAD MODULE FOR ROOM
# -----------------------------------
DATA RMS_STR "ROOMS.";

FN:1 LOAD_RM_MODULE_FOR(RM:1) {
  SET_MODULE_TO(RM);
  IF (NOT (GET_RM_MODULE()=MODULE)) {
    SET (@FILE_NAME)[0,6]=RMS_STR[0,6];
    NUM_TO_STR(@MODULE,1,10,@FILE_NAME+6);
    SET (@FILE_NAME)[7,5]=OBJ_STR[0,5];
    RETURN ISSUE_DOS_CMD(DOS_BLOAD,@FILE_NAME);
  }
  RETURN TRUE;
}
# -----------------------------------
# GET CURRENT ROOM MODULE
# -----------------------------------
FN:1 GET_RM_MODULE() {
  RETURN RM_MODULE[0,1];
}
# -----------------------------------
# PRINT ROOM DESCRIPTION
# -----------------------------------
DATA SEPARATOR "\$0D----------------------------------------\$08";

DATA JEWELS_GLOWING "\$0D\$0DTHE JEWELS ON TOP OF THE SCEPTRE ARE GLOWING.";

FN PRINT_RM(RM:1) {
  VAR RM_NAME:2;
  VAR RM_DESC:2;
  IF (LOAD_RM_MODULE_FOR(RM)) {
    SET RM_NAME=RM_NAMES[2*OFFSET,2];
    SET RM_DESC=RM_DESCS[2*OFFSET,2];
    MON_HOME();
    INVERSE();
    PRINT_STRING(RM_NAME);
    NORMAL();
    MON_CROUT();
    MON_CROUT();
    RM_DESC();
    MON_CROUT();
    PRINT_RM_OBJS(CURRENT_RM);
    PRINT_STRING(SEPARATOR);
    IF (FIND_OBJ_ID(OBJ_SCEPTRE))
      IF (FIND_OBJ_ID_IN_RM(OBJ_METAL) OR
       FIND_OBJ_ID_IN_RM(OBJ_CROSS))
        PRINT_WORDS(JEWELS_GLOWING);
  }
}
# -----------------------------------
# GET ROOM EXIT
# -----------------------------------
FN:1 RM_EXIT(RM:1,DIR:1) {
  # HANDLE SPECIAL CASES
  IF (RM=RM_BASEMENT AND DIR=DOWN AND NOT USED_SWITCH)
    RETURN RM_NONE;
  IF (RM=RM_RESERVOIR AND DIR=NORTH AND
   NOT FIND_OBJ_ID(OBJ_CANOE))
    RETURN RM_NONE;
  # GENERIC CASE
  IF (LOAD_RM_MODULE_FOR(RM))
    RETURN RM_EXITS[6*OFFSET+DIR,1];
  # DISK ERROR
  RETURN RM_ERROR;
}
# -----------------------------------
# PRINT ROOM OBJECTS
# -----------------------------------
DATA VIS_ITEMS "\$0DVISIBLE ITEMS: ";

FN PRINT_RM_OBJS(RM:1) {
  VAR OBJ:1;
  VAR NUM_VISIBLE:1=0;
  SET_RM_LIST_PTR();
  WHILE (RM_LIST_IDX<RM_LIST_LEN) {
    IF (RM_OBJ_VISIBLE()) {
      SET OBJ=GET_RM_OBJ_AT_IDX();
      IF (NUM_VISIBLE=0) 
        PRINT_STRING(VIS_ITEMS);
      POSITION_CURSOR(15, MON_CV[0,1]);
      PRINT_OBJ_NAME(OBJ);
      MON_CROUT();
      INCR NUM_VISIBLE;
    }
    INCR RM_LIST_IDX;
  }
}
# -----------------------------------
# PRINT ROOM HELP
# -----------------------------------
FN PRINT_HELP(RM:1) {
  VAR HELP:2;
  IF (LOAD_RM_MODULE_FOR(RM)) {
    SET HELP=RM_HELP[2*OFFSET,2];
    PRINT_WORDS(HELP);
  }
}
