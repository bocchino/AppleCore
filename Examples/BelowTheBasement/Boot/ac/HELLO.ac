# -------------------------------
# HELLO FILE FOR 
# BELOW THE BASEMENT
# -------------------------------
# INT BASIC CALL FOR INPUT
# -------------------------------
CONST BASIC_PTR           $E3D0;
# -------------------------------
# 6502 INSTRUCTIONS
# -------------------------------
CONST JMP	            $4C;
# -------------------------------
# MAIN PROGRAM
# -------------------------------
CONST HELLO               $2000;

VAR PASS:1=0;
VAR RESETV:3;
VAR BASIC:3;

DATA ROM_77	    "ROM.77.EDITOR.OBJ";
DATA INSTALL_EDITOR "INSTALL.SHELL.EDITOR.OBJ";
DATA BTB	    "BTB.OBJ";

FN MAIN() {
  IF (PASS=0) { # PASS 0
    # INSTALL ROM IN LANGUAGE CARD
    SELECT_RD_ROM_WR_RAM_2();
    BLOAD(ROM_77);
    # INSTALL SHELL EDITOR
    SELECT_RD_RAM_WR_RAM_2();
    BLOAD_AND_CALL(INSTALL_EDITOR);
    # SAVE RESETV
    SET RESETV=MON_SOFTEV[0,3];
    # SAVE BASIC CODE
    SET BASIC=BASIC_PTR[0,3];
    # SET UP BASIC ENTRY TO COME BACK HERE
    SET BASIC_PTR[0,1]=JMP;
    SET BASIC_PTR[1,2]=HELLO;
    SET PASS=1;
    # DOS COLD START, THEN COME BACK
    DOS_COLD_START();
  }
  ELSE { # PASS 1
    # RESTORE RESETV
    SET MON_SOFTEV[0,3]=RESETV;
    # RESTORE BASIC
    SET BASIC_PTR[0,3]=BASIC;
    # A=0 SIGNALS INT BASIC
    SET ^A=0;
    # REENTER DOS AND RUN BTB
    DOS_ENTRY();    
    BRUN(BTB);
  }
}
# -------------------------------
# BLOAD FILE
# -------------------------------
FN BLOAD(FILE:2) {
  PRINT_STRING(DOS_BLOAD);
  PRINT_STRING(FILE);
  MON_CROUT();
}
# -------------------------------
# LOAD AND CALL FILE
# -------------------------------
FN BLOAD_AND_CALL(FILE:2) {
  BLOAD(FILE);
  DOS_BLOAD_ADDR[0,2]();
}
# -------------------------------
# BRUN FILE
# -------------------------------
FN BRUN(FILE:2) {
  PRINT_STRING(DOS_BRUN);
  PRINT_STRING(FILE);
  MON_CROUT();
}

INCLUDE "DOS.AVM";
INCLUDE "IO.AVM";
INCLUDE "BANK.SWITCHES.AVM";
