# -----------------------------------
# A TRIVIAL INTERACTIVE GAME
# -----------------------------------

CONST CAVE   0;
CONST SUNNY  1;
CONST VALLEY 2;
CONST NONE   -1;

DATA RM_STRS CAVE_STR;
DATA         SUNNY_STR;
DATA         VALLEY_STR;

DATA CAVE_STR   "You are in a cave.";
DATA SUNNY_STR  "You are in a sunny place.";
DATA VALLEY_STR "You are in a green valley.";

DATA EXIT_CMDS 'n';
DATA           's';
DATA           'e';
DATA           'w';

DATA EXITS  NONE;
DATA        NONE;
DATA	    NONE;
DATA	    SUNNY;

DATA        VALLEY;
DATA        NONE;
DATA        CAVE;
DATA        NONE;

DATA        NONE;
DATA        SUNNY;
DATA        NONE;
DATA        NONE;

VAR CURRENT_ROOM:1=0;

DATA PROMPT "What next? ";

DATA ERROR "I didn't understand.\$0D";

FN MAIN() {
  VAR LEN:1;
  VAR OK:1;
  PRINT_RM_DESCR();
  WHILE(TRUE) {
    PRINT_STRING(PROMPT);
    SET LEN=GET_LINE();
    IF (LEN=0) RETURN;
    SET OK=PROCESS_INPUT();
    IF (NOT OK) {
      PRINT_STRING(ERROR);
    }    
  }
}

FN:1 PROCESS_INPUT() {
  VAR I:1=0;
  VAR ROOM:1;
  WHILE (I < 4) {
    IF ((MON_IN[0,1] AND $7F)=EXIT_CMDS[I,1]) {
      SET ROOM=EXITS[4*CURRENT_ROOM+I,1];
      GO_TO_ROOM(ROOM);
      RETURN TRUE;
    }
    INCR I;
  }
  RETURN FALSE;
}

DATA NO_EXIT "You can't go that way.\$0D";

FN GO_TO_ROOM(ROOM:1) {
  IF (ROOM=NONE) {
    MON_CROUT();
    PRINT_STRING(NO_EXIT);
  }
  ELSE {
    SET CURRENT_ROOM=ROOM;
    PRINT_RM_DESCR();
  }
}

FN PRINT_RM_DESCR() {
  VAR STR:2=RM_STRS[2*CURRENT_ROOM,2];
  MON_CROUT();
  PRINT_STRING(STR);
  MON_CROUT();
}

INCLUDE "IO";
