# -----------------------------------
# ARTIST, PART 2
# -----------------------------------
# FILE NAME FOR SAVE AND LOAD
VAR FILE_NAME:32;
# TERMINATING ZERO
DATA 0;
# BUFFER FOR TEMP SCREEN STORAGE
CONST SCREEN_BUF $2000;
# -----------------------------------
# LOAD SCREEN FROM DISK
# -----------------------------------
DATA LOAD     "LOAD ";
# BASE ADDRESS FOR SCRATCHPAD ADDRS 
# (SEE APPLE II REFERENCE MANUAL, 
# P. 83). THESE AREN'T PART OF THE
# DISPLAY AREA, SO WE MUST PRESERVE
# THEM WHEN LOADING A SCREEN.
CONST SCREEN_BASE $478;
# BASE ADDRESS IN BUFFER
CONST BUFFER_BASE $2078;

DATA ADDR ",A$2000\$0D";

FN LOAD_SCREEN() {
  VAR I:2=0;
  # LOAD SCREEN INTO BUFFER.
  # WE CAN'T LOAD DIRECTLY INTO THE
  # SCREEN AREA, BECAUSE DOS USES
  # THE SCRATCHPAD ADDRESSES DURING
  # THE LOAD.
  PRINT_STRING(DOS_BLOAD);
  PRINT_STRING(@FILE_NAME);
  PRINT_STRING(ADDR);
  # RESTORE SCRATCHPAD, AS MODIFIED
  # BY DOS, INTO BUFFER
  WHILE (I < 7) {
    SET BUFFER_BASE[I*$80,7]=
      SCREEN_BASE[I*$80,7];
    INCR I;
  }
  # FINALLY, MOVE BUFFER INTO PLACE
  RESTORE_SCREEN();
  SET_SCRN_COLOR();
}
# -----------------------------------
# SAVE SCREEN TO DISK
# -----------------------------------
DATA SAVE     "SAVE ";
DATA ADDR_LEN ",A$400,L$3F8\$0D";

FN SAVE_SCREEN() {
  HIDE_CURSOR();
  PRINT_STRING(DOS_BSAVE);
  PRINT_STRING(@FILE_NAME);
  PRINT_STRING(ADDR_LEN);
}
# -----------------------------------
# PROCESS A CHAR
# -----------------------------------
FN PROCESS_CHAR(CHAR:1) {
  VAR I:1=0;
  VAR COLOR:1;
  SET COLOR=(CHAR AND $7F)-'A';
  IF (COLOR < $10) {
    SET PEN_COLOR=COLOR;
    SHOW_CURSOR();
    RETURN;
  }
  WHILE (CMD_CHARS[I,1]>0) {
    IF (EQ_CHAR(CHAR,CMD_CHARS[I,1])) {
      CMD_HANDLERS[I<<1,@]();
    }
    INCR I;
  }	
}
# -----------------------------------
# MOVE CURSOR TO NEW COORDS
# -----------------------------------
FN MOVE_CURSOR_TO(NEWX:1S,NEWY:1S) {
  NORMALIZE(@NEWX,39);
  NORMALIZE(@NEWY,38);
  SET_COLOR(SCRN_COLOR);
  PLOT(XPOS,YPOS);
  SET XPOS=NEWX;
  SET YPOS=NEWY;
  SET_SCRN_COLOR();
  SHOW_CURSOR();
}
# -----------------------------------
# SHOW THE CURSOR
# -----------------------------------
FN SHOW_CURSOR() {
  IF (NOT (PEN_COLOR=SCRN_COLOR))
    SET_COLOR(PEN_COLOR);
  ELSE
    SET_COLOR(NOT PEN_COLOR);
  PLOT(XPOS,YPOS);  
}
# -----------------------------------
# HIDE THE CURSOR
# -----------------------------------
FN HIDE_CURSOR() {
  SET_COLOR(SCRN_COLOR);
  PLOT(XPOS,YPOS);
}
# -----------------------------------
# SET THE SCREEN COLOR AT POSX,POSY
# -----------------------------------
FN SET_SCRN_COLOR() {
  SET SCRN_COLOR=SCRN(XPOS,YPOS);
}
# -----------------------------------
# NORMALIZE COORDS TO BOUND
# -----------------------------------
FN NORMALIZE(PTR:@,BOUND:1) {
  VAR COORD:1S=PTR[0,1];
  IF (COORD < 0)
    SET PTR[0,1]=BOUND;
  ELSE IF (COORD > BOUND) 
    SET PTR[0,1]=0;
}
# -----------------------------------
# HELP SCREEN
# -----------------------------------
DATA HEADER "DRAW COLORFUL PICTURES ON YOUR APPLE II!\$0D\$0D";

DATA CMD_LETTERS   "LETTERS A-P";
DATA CMD_ARROWS	   "ARROWS";
DATA CMD_APPLE     "OPEN APPLE";
DATA CMD_CTRL_S    "CONTROL-S";
DATA CMD_CTRL_L    "CONTROL-L";
DATA CMD_CTRL_C    "CONTROL-C";
DATA CMD_ESC	   "ESCAPE";

DATA DSCR_LETTERS  "SET PEN COLOR";
DATA DSCR_ARROWS   "MOVE CURSOR";
DATA DSCR_APPLE    "DRAW DOT";
DATA DSCR_CTRL_S   "SAVE SCREEN TO DISK";
DATA DSCR_CTRL_L   "LOAD SCREEN FROM DISK";
DATA DSCR_CTRL_C   "CATALOG DISK";
DATA DSCR_ESC	   "QUIT";

DATA HELP_CMDS	   CMD_LETTERS;
DATA 		   CMD_ARROWS;
DATA		   CMD_APPLE;
DATA		   CMD_CTRL_S;
DATA		   CMD_CTRL_L;
DATA		   CMD_CTRL_C;
DATA		   CMD_ESC;
DATA		   0;
DATA		   0;

DATA HELP_DSCRS	   DSCR_LETTERS;
DATA 		   DSCR_ARROWS;
DATA		   DSCR_APPLE;
DATA		   DSCR_CTRL_S;
DATA		   DSCR_CTRL_L;
DATA		   DSCR_CTRL_C;
DATA		   DSCR_ESC;

DATA NOTE "NOTE: YOU CAN APPEND ";
DATA D1   ",D1";
DATA AND_STR  " AND ";
DATA D2   ",D2";
DATA TO_CMDS " TO DISK COMMANDS!\$0D\$0D";

FN SHOW_HELP_SCREEN() {
  VAR I:1=0;
  PRINT_STRING(HEADER);
  WHILE (HELP_CMDS[I<<1,2] > 0) {
    IF (MON_CV[0,1] > 20) {
      MON_RDKEY();
      MON_HOME();
    }
    INVERSE();
    PRINT_STRING(HELP_CMDS[I<<1,@]);
    NORMAL();
    SET MON_WNDLFT[0,1]=13;
    POSITION_CURSOR(0,MON_CV[0,1]);
    PRINT_STRING(HELP_DSCRS[I<<1,@]);
    SET MON_WNDLFT[0,1]=0;
    MON_CROUT();
    MON_CROUT();
    INCR I;
  }
  PRINT_WORDS(NOTE);
  INVERSE();
  PRINT_WORDS(D1);
  NORMAL();
  PRINT_WORDS(AND_STR);
  INVERSE();
  PRINT_WORDS(D2);
  NORMAL();
  PRINT_WORDS(TO_CMDS);
  MON_RDKEY();
}
# -----------------------------------
# PRINT CATALOG
# -----------------------------------
FN PRINT_CATALOG() {
  PRINT_CHAR($04);
  PRINT_STRING(CATALOG);
  PRINT_STRING(@FILE_NAME);
  MON_CROUT();
  MON_RDKEY();
}
# -----------------------------------
# CLEAR AND RESTORE SCREEN
# -----------------------------------
FN CLEAR_SCREEN() {
  COPY($400,$3F8,$2000);
  SET_TEXT();
  SET MON_WNDTOP[0,1]=0;
  MON_HOME();
}

FN RESTORE_SCREEN() {
  SET_GRAPHICS();
  COPY($2000,$3F8,$400);
}
 

