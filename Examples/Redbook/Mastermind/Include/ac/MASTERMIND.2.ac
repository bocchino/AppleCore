# -----------------------------------
# MASTERMIND, PART 2
# -----------------------------------
# PROCESS A CHARACTER OF INPUT
# -----------------------------------
CONST CR		$0D;
CONST LEFT_ARROW 	$08;
CONST RIGHT_ARROW	$15;
CONST ESC		27;

FN PROCESS_CHAR(CHAR:1) {
  VAR I:1=0;
  IF (EQ_CHAR(CHAR,CR)) {
    DISPLAY_GUESS(XPOS,YPOS,(@GUESSES)[XPOS,1]);
    SET LINE_ENTERED=TRUE;
  }
  ELSE IF (EQ_CHAR(CHAR,LEFT_ARROW) AND (XPOS > 0)) {
    DISPLAY_GUESS(XPOS,YPOS,(@GUESSES)[XPOS,1]);
    DECR XPOS;
  }
  ELSE IF (EQ_CHAR(CHAR,RIGHT_ARROW) 
   AND (XPOS < CODE_SIZE-1)) {
    DISPLAY_GUESS(XPOS,YPOS,(@GUESSES)[XPOS,1]);
    INCR XPOS;
  }
  ELSE IF (EQ_CHAR(CHAR,ESC)) {
    SET LINE_ENTERED=TRUE;
    SET DONE_ROUND=TRUE;
    SET DONE_GAME=TRUE;
  }
  ELSE {
    WHILE (I<NUM_COLORS) {
      IF (EQ_CHAR(CHAR,COLOR_NAMES[I,1])) {
        SET (@GUESSES)[XPOS,1]=COLORS[I,1];
	PROCESS_CHAR(RIGHT_ARROW);
	RETURN;
      }
      INCR I;
    } 
  }
}
# -----------------------------------
# GIVE FEEDBACK ON GUESSES
# -----------------------------------
FN GIVE_FEEDBACK() {
  VAR I:1=0;
  VAR J:1=0;
  VAR NUM_CORRECT:1=0;
  VAR TMP_GUESSES:5=GUESSES;
  VAR TMP_CODE:5=CODE;
  SET_COLOR(WHITE);
  WHILE (I < CODE_SIZE) {
    IF ((@TMP_GUESSES)[I,1]=(@TMP_CODE)[I,1]) {
      INCR NUM_CORRECT;
      PLOT(21+(NUM_CORRECT<<1),YPOS);
      SET (@TMP_GUESSES)[I,1]=NO_GUESS;
      SET (@TMP_CODE)[I,1]=NO_CODE;
    }
    INCR I;
  }
  IF (NUM_CORRECT=CODE_SIZE) {
    SET DONE_ROUND=TRUE;
    RETURN;
  }
  SET_COLOR(DARK_GREY);
  SET I=0;
  WHILE (I < CODE_SIZE) {
    SET J=0;
    WHILE (J < CODE_SIZE) {
      IF ((@TMP_GUESSES)[I,1]=(@TMP_CODE)[J,1]) {
	INCR NUM_CORRECT;
        PLOT(21+(NUM_CORRECT<<1),YPOS);
	SET (@TMP_GUESSES)[I,1]=NO_GUESS;
	SET (@TMP_CODE)[J,1]=NO_CODE;
      }            
      INCR J;
    }
    INCR I;
  }
}
# -----------------------------------
# FINISH ROUND AFTER CORRECT GUESS
# -----------------------------------
DATA GOT_IT_1 "YOU GOT IT IN ";
DATA GOT_IT_2 " TRIES (";
DATA EXCELLENT "EXCELLENT";
DATA GOOD      "GOOD";
DATA AVERAGE   "AVERAGE";
DATA POOR      "POOR";
DATA AGAIN     "\$0DPLAY AGAIN (Y/N)? ";

FN FINISH_ROUND() {
  POSITION_CURSOR(0,21);
  MON_CLREOP();
  PRINT_STRING(GOT_IT_1);
  PRINT_TRY();
  PRINT_STRING(GOT_IT_2);
  IF (TRY<7) PRINT_STRING(EXCELLENT);
  ELSE IF (TRY<10) PRINT_STRING(GOOD);
  ELSE IF (TRY<15) PRINT_STRING(AVERAGE);
  ELSE PRINT_STRING(POOR);
  PRINT_CHAR(')');
  PRINT_STRING(AGAIN);
  MON_RDKEY();
  IF (NOT EQ_CHAR(^A,'Y')) SET DONE_GAME=TRUE;  
}
# -----------------------------------
# PRINT THE CURRENT TRY
# -----------------------------------
FN PRINT_TRY() {
  NUM_TO_STR(@TRY,1,10,MON_IN);
  PRINT_STRING(MON_IN);
}

