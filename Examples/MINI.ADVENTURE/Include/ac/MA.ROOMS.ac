# -----------------------------------
# MINI ADVENTURE: ROOMS
# -----------------------------------
# ROOM CODES
# -----------------------------------
CONST RM_ENTER  0;
CONST RM_GRIMY  1;
CONST RM_OFFAL  2;
CONST RM_PIPE   3;
CONST RM_TAKEN -2;
CONST RM_NONE  -1;
# -----------------------------------
# DIRECTION CODES
# -----------------------------------
CONST NORTH 0;
CONST SOUTH 1;
CONST EAST  2;
CONST WEST  3;
CONST UP    4;
CONST DOWN  5;
# -----------------------------------
# DATA OFFSETS
# -----------------------------------
CONST RM_NAME_IDX    0;
CONST RM_PRINTER_IDX 2;
CONST RM_HELP_IDX    4;
CONST RM_EXITS_IDX   6;
CONST RM_DATA_SIZE   12;
# -----------------------------------
# ROOM DATA ACCESS FNS
# -----------------------------------
FN:2 RM_NAME(RM:1) {
  RETURN RM_BASE(RM)[RM_NAME_IDX,2];
}
FN:2 RM_PRINTER(RM:1) {
  RETURN RM_BASE(RM)[RM_PRINTER_IDX,2];
}
FN:2 RM_HELP(RM:1) {
  RETURN RM_BASE(RM)[RM_HELP_IDX,2];
}
FN:2 RM_EXIT_PTR(RM:1,EXIT:1) {
  RETURN RM_BASE(RM)+RM_EXITS_IDX+EXIT;
}
FN:1 RM_EXIT(RM:1,EXIT:1) {
  RETURN RM_BASE(RM)[RM_EXITS_IDX+EXIT,1];
}
FN:2 RM_BASE(RM:1) {
  RETURN RM_DATA+RM*RM_DATA_SIZE;
}
# -----------------------------------
# CURRENT ROOM
# -----------------------------------
VAR CURRENT_RM:1;
# -----------------------------------
# ROOM DATA
# -----------------------------------
DATA RM_DATA RM_ENTER_NAME;
DATA         RM_ENTER_PRINTER;
DATA         RM_ENTER_HELP;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;

DATA         RM_GRIMY_NAME;
DATA         RM_GRIMY_PRINTER;
DATA         RM_GRIMY_HELP;
DATA         RM_NONE;
DATA         RM_OFFAL;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_ENTER;
DATA         RM_NONE;

DATA         RM_OFFAL_NAME;
DATA         RM_OFFAL_PRINTER;
DATA         RM_OFFAL_HELP;
DATA         RM_GRIMY;
DATA         RM_NONE;
DATA         RM_PIPE;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;

DATA         RM_PIPE_NAME;
DATA         RM_PIPE_PRINTER;
DATA         RM_PIPE_HELP;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_NONE;
DATA         RM_OFFAL;
DATA         RM_NONE;
DATA         RM_NONE;
# -----------------------------------
# ROOM NAMES
# -----------------------------------
DATA RM_ENTER_NAME  "ENTRANCE";
DATA RM_GRIMY_NAME  "GRIMY ROOM";
DATA RM_OFFAL_NAME  "OFFAL ROOM";
DATA RM_PIPE_NAME   "CORRUGATED PIPE";
# -----------------------------------
# ROOM DESCRIPTIONS
# -----------------------------------
DATA RM_ENTER_DESC 
     "AFTER A FEW HOURS OF HIKING, YOU HAVE COME TO AN IRON GRATE SET IN THE GROUND.  "\;
DATA "THE LOCK SECURING THE GRATE HAS LONG SINCE RUSTED";
DATA GRATE_BOLTS ", BUT IRON BOLTS STILL HOLD IT IN PLACE";

DATA RM_GRIMY_DESC
     "DIM LIGHT FILTERS IN FROM THE HOLE ABOVE TO REVEAL THIS ROOM'S CONTENTS.  "\;
DATA "ANCIENT ROTTING WOODEN SHELVES COVERED WITH SPIDER WEBS LINE THE WALLS.  "\;
DATA "AN OVERTURNED BARREL LIES ON THE FLOOR.  "\;
DATA "THERE IS AN EXIT SOUTH.";

DATA RM_OFFAL_DESC
     "AS SOON AS YOU ENTER THIS ROOM A FOUL SMELL PERVADES YOUR NOSTRILS.  "\;
DATA "IN THE CENTER OF THE ROOM IS A PILE OF GARBAGE ON TOP OF WHICH IS A ";
DATA RM_OFFAL_ANGRY "VERY ANGRY-LOOKING OTYUGH!  ";
DATA RM_OFFAL_DEAD  "DEAD OTYUGH.  ";
DATA RM_OFFAL_EXIT  "THERE IS AN EXIT EAST.";

DATA RM_PIPE_DESC 
     "THIS IS A 40-FOOT-LONG SECTION OF CORRUGATED PIPING.  "\;
DATA "IT IS ABOUT SIX FEET IN DIAMETER.  "\;
DATA "THERE IS AN EXIT WEST, BUT THE EAST END IS SEALED OFF.";
# -----------------------------------
# ROOM PRINTING FUNCTIONS
# -----------------------------------
DATA POLE_ENTER_STR "A LONG WOODEN POLE LIES IN THE GRASS NEAR THE GRATE.";
DATA PASSAGE_BELOW "THE GRATE IS OPEN, REVEALING A PASSAGE BELOW.";

FN RM_ENTER_PRINTER() {
  PRINT_WORDS(RM_ENTER_DESC);
  IF (OBJ_TAKE_FN(OBJ_GRATE)=
   OBJ_TAKE_BOLTED) {
    PRINT_WORDS(GRATE_BOLTS);
  }
  PRINT_CHAR('.');
  IF (RM_EXIT(RM_ENTER,DOWN)=RM_GRIMY) {
    MON_CROUT();
    MON_CROUT();
    PRINT_WORDS(PASSAGE_BELOW);
  }
  IF (OBJ_RM(OBJ_POLE)=RM_ENTER AND
    NOT WAS_DROPPED(OBJ_POLE)) {
    MON_CROUT();
    MON_CROUT();
    PRINT_WORDS(POLE_ENTER_STR);
  }
}
FN RM_GRIMY_PRINTER() {
  PRINT_WORDS(RM_GRIMY_DESC);
}
FN RM_OFFAL_PRINTER() {
  PRINT_WORDS(RM_OFFAL_DESC);
  IF (OTYUGH_ALIVE) 
    PRINT_WORDS(RM_OFFAL_ANGRY);
  ELSE PRINT_WORDS(RM_OFFAL_DEAD);
  PRINT_WORDS(RM_OFFAL_EXIT);    
}
FN RM_PIPE_PRINTER() {
  PRINT_WORDS(RM_PIPE_DESC);
}
# -----------------------------------
# ROOM HELP STATEMENTS
# -----------------------------------
DATA RM_ENTER_HELP  "TAKE A CLOSER LOOK.";
DATA RM_GRIMY_HELP  "YOU'LL HAVE TO FIGURE IT OUT FOR YOURSELF!";
DATA RM_OFFAL_HELP  "WHAT IF THERE'S SOMETHING UNDER THAT MESS?";
DATA RM_PIPE_HELP   "IF YOU THINK YOU'LL GET OUT OF HERE WITHOUT A FIGHT, YOU'RE ALL WET!";
# -----------------------------------
# PRINT ROOM DESCRIPTION
# -----------------------------------
FN PRINT_RM(RM:1) {
  VAR PRINTER:2=RM_PRINTER(RM);
  VAR IDX:1=0;
  VAR PRINTED_OBJ:1=FALSE;
  MON_HOME();
  INVERSE();
  PRINT_STRING(RM_NAME(RM));
  NORMAL();
  MON_CROUT();
  MON_CROUT();
  PRINTER();
  MON_CROUT();
  MON_CROUT();
  
  WHILE (IDX < NUM_OBJS) {
    IF (IS_IN_ROOM(IDX,CURRENT_RM) 
     AND WAS_DROPPED(IDX)) {
       PRINT_OBJ_HERE(IDX);
       MON_CROUT();
       SET PRINTED_OBJ=TRUE;
    }
    INCR IDX;
  }
  IF (PRINTED_OBJ) {
    MON_CROUT();
  }

  SET IDX=0;  
  WHILE (IDX < $21[0,1]) {
    PRINT_CHAR('-');
    INCR IDX;
  }  
}
