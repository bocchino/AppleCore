# -----------------------------------
# MINI ADVENTURE: OBJECTS
# -----------------------------------
# OBJECT CODES
# -----------------------------------
CONST NUM_OBJS     8;

CONST OBJ_GRATE    0;
CONST OBJ_WRENCH   1;
CONST OBJ_POLE     2;
CONST OBJ_BOLTS    3;
CONST OBJ_SHELVES  4;
CONST OBJ_BARREL   5;
CONST OBJ_LAMP     6;
CONST OBJ_SPIDERS  7;
CONST OBJ_SCROLL   8;
CONST OBJ_TABLET   9;
CONST OBJ_KNIFE    10;
CONST OBJ_OTYUGH   11;
CONST OBJ_GARBAGE  12;
CONST OBJ_HAND     13;
CONST OBJ_PIPE     14;
CONST OBJ_SM_HATCH 15;
CONST OBJ_LG_HATCH 16;
CONST OBJ_SELF     17;
# -----------------------------------
# PLURAL OBJECTS
# -----------------------------------
FN:1 OBJ_IS_PLURAL(OBJ:1) {
  RETURN (OBJ=OBJ_BOLTS) OR
   (OBJ=OBJ_SHELVES) OR
   (OBJ=OBJ_SPIDERS);
}
# -----------------------------------
# OBJECT PRESENT MESSAGE
# -----------------------------------
DATA THERE_IS  "THERE IS A ";
DATA THERE_ARE "THERE ARE SOME ";
FN PRINT_OBJ_HERE(OBJ:1) {
  IF (OBJ_IS_PLURAL(OBJ)) {
    PRINT_WORDS(THERE_ARE);
  }
  ELSE {
    PRINT_WORDS(THERE_IS);
  }
  PRINT_STRING(OBJ_NAME(OBJ));
  PRINT_STRING(HERE);
}
# -----------------------------------
# OBJECT NAMES
# -----------------------------------
FN:2 OBJ_NAME(OBJ:1) {
  RETURN OBJ_NAMES[OBJ*2,2];
}

DATA OBJ_NAMES OBJ_GRATE_NAME;
DATA           OBJ_WRENCH_NAME;
DATA           OBJ_POLE_NAME;
DATA           OBJ_BOLTS_NAME;
DATA           OBJ_SHELVES_NAME;
DATA           OBJ_BARREL_NAME;
DATA           OBJ_LAMP_NAME;
DATA           OBJ_SPIDERS_NAME;
DATA           OBJ_SCROLL_NAME;
DATA           OBJ_TABLET_NAME;
DATA           OBJ_KNIFE_NAME;
DATA           OBJ_OTYUGH_NAME;
DATA           OBJ_GARBAGE_NAME;
DATA           OBJ_HAND_NAME;
DATA           OBJ_PIPE_NAME;
DATA           OBJ_SM_HATCH_NAME;
DATA           OBJ_LG_HATCH_NAME;
DATA           OBJ_SELF_NAME;

DATA OBJ_GRATE_NAME    "GRATE";
DATA OBJ_WRENCH_NAME   "WRENCH";
DATA OBJ_POLE_NAME     "POLE";
DATA OBJ_BOLTS_NAME    "BOLTS";
DATA OBJ_SHELVES_NAME  "SHELVES";
DATA OBJ_BARREL_NAME   "BARREL";
DATA OBJ_LAMP_NAME     "LAMP";
DATA OBJ_SPIDERS_NAME  "SPIDERS";
DATA OBJ_SCROLL_NAME   "SCROLL";
DATA OBJ_TABLET_NAME   "TABLET";
DATA OBJ_KNIFE_NAME    "KNIFE";
DATA OBJ_OTYUGH_NAME   "OTYUGH";
DATA OBJ_GARBAGE_NAME  "GARBAGE";
DATA OBJ_HAND_NAME     "HAND";
DATA OBJ_PIPE_NAME     "PIPE";
DATA OBJ_SM_HATCH_NAME "SMALL";
DATA OBJ_LG_HATCH_NAME "LARGE";
DATA OBJ_SELF_NAME     "SELF";
# -----------------------------------
# OBJECT DESCRIPTIONS
# -----------------------------------
DATA GRATE         "THE ANCIENT GRATE IS CAKED WITH RUST";
DATA OBJ_GRATE_BOLTS   ", BUT THE BOLTS ARE SECURE.  CAREFUL INSPECTION SHOWS THAT THE BOLTS ARE QUITE A BIT NEWER AND MAY HAVE BEEN LOOSENED RECENTLY";
DATA GRATE_GLIMMER "YOU CAN SEE THE GLIMMER OF A METAL OBJECT THROUGH THE BARS.  ";

DATA OBJ_WRENCH_DESCR "IT IS A STEEL WRENCH.";

DATA OBJ_POLE_DESCR "THIS IS A FOUR-FOOT-LONG BLACK POLE.  "\;
DATA                "IT HAS A HOOKLIKE CONSTRUCTION ON ITS TIP.";

DATA BOLTS_IRON   "THE BOLTS ARE MADE OF IRON";
DATA BOLTS_STRONG " AND VERY STRONG.  YOU MIGHT BE ABLE TO LOOSEN THEM WITH A WRENCH";

DATA SHELVES         "THE SHELVES ARE COVERED WITH STICKY SPIDER WEBS.  YOU BRUSH THEM ASIDE TO REVEAL ";
DATA SHELVES_LAMP    "AN OIL LAMP AND ";
DATA SHELVES_SPIDERS "SOME VERY ANGRY SPIDERS.";

DATA BARREL "THE WOODEN BARREL IS ON ITS SIDE AS IF SOMEONE HAD TRIED TO SMASH IT BUT FAILED IN THE ATTEMPT.  HOWEVER THE LID IS STILL TIGHTLY SEALED.  INSCRIBED ON THE LID IS THE WORD \$22ZARTAN\$22.";

DATA LAMP "THIS IS AN OIL LAMP WHICH GIVES OFF LIGHT IN A RADIUS OF ABOUT 20 FEET.";

DATA SPIDERS "THE SPIDERS ARE ANGRY BUT HARMLESS.";

DATA SCROLL "IT IS A PARCHMENT SCROLL.  THERE IS A SPELL  ON IT.  THE HEADING ABOVE IT SAYS \$34CLEANER\$34.";

DATA TABLET "A STONE TABLET.  THERE IS WRITING INSCRIBED UPON IT.";

DATA KNIFE "THIS IS A GOLD-INLAID KNIFE WITH AN IVORY HANDLE.  IT LOOKS QUITE VALUABLE, BUT ALSO SERVICABLE AS A STURDY WEAPON.";

DATA OTYUGH "THE HIDEOUS BEAST IS COVERED WITH SLIME AND SMUT.  TWO TENTACLES PROTRUDE FROM ITS FILTHY BODY WAITING TO SNATCH HELPLESS PRAY INTO ITS GAPING MAW.";

DATA GARBAGE "THE OFFAL IS SLIMY AND REVOLTING, BUT IT LOOKS LIKE AN EXCELLENT HIDING PLACE.";

DATA HAND "IT IS A LIFE-SIZED PLASTER REPLICA OF A HUMAN HAND.";

DATA PIPE "THERE ARE TWO HATCHES IN THE TOP OF THE PIPE.  ONE IS SMALL, BUT THE OTHER ONE IS CONSIDERABLY LARGER.";

DATA SMALL "THE SMALL ONE HAS MOSS AND WET ALGAE GROWING AROUND IT.";
 
DATA LARGE "THE LARGE ONE MIGHT BE BIG ENOUGH FOR HUMAN PASSAGE.  THERE IS A HAND-SHAPED DESIGN ON IT.";

DATA SELF "YOU ARE WEARING A TUNIC AND BOOTS.";

# -----------------------------------
# OBJECT PRINTING FUNCTIONS
# -----------------------------------
FN OBJ_GRATE_DESC_FN() {
  PRINT_WORDS(GRATE);
  IF (OBJ_TAKE_FN(OBJ_GRATE)=OBJ_TAKE_BOLTED) {
    PRINT_WORDS(OBJ_GRATE_BOLTS);
  }
  PRINT_CHAR('.');
  IF (IS_IN_ROOM(OBJ_WRENCH,CURRENT_RM) 
   AND (NOT WAS_DROPPED(OBJ_WRENCH))) {
    MON_CROUT();
    PRINT_WORDS(GRATE_GLIMMER);
    PRINT_WORDS(OBJ_WRENCH_DESCR);
  }
}
FN OBJ_WRENCH_DESC_FN() {
  PRINT_WORDS(OBJ_WRENCH_DESCR);
}
FN OBJ_POLE_DESC_FN() {
  PRINT_WORDS(OBJ_POLE_DESCR);
}
FN OBJ_BOLTS_DESC_FN() {
  PRINT_WORDS(BOLTS_IRON);
  IF (OBJ_TAKE_FN(OBJ_BOLTS)=OBJ_TAKE_SECURE) {
    PRINT_WORDS(BOLTS_STRONG);
  }
  PRINT_CHAR('.');
}
FN OBJ_SHELVES_DESC_FN() {
  PRINT_WORDS(SHELVES);
  IF (IS_IN_ROOM(OBJ_LAMP,CURRENT_RM)) {
    PRINT_WORDS(SHELVES_LAMP);
  }
  PRINT_WORDS(SHELVES_SPIDERS);
}
FN OBJ_BARREL_DESC_FN() {
  PRINT_WORDS(BARREL);
}
FN OBJ_LAMP_DESC_FN() {
  PRINT_WORDS(LAMP);
}
FN OBJ_SPIDERS_DESC_FN() {
  PRINT_WORDS(SPIDERS);
}
# -----------------------------------
# OBJECT DATA
# -----------------------------------
CONST OBJ_DATA_SIZE 5;
CONST OBJ_DESC_IDX  0;
CONST OBJ_RM_IDX    2;
CONST OBJ_TAKE_IDX  3;

DATA OBJ_DATA OBJ_GRATE_DESC_FN;
DATA          RM_ENTER;
DATA          OBJ_TAKE_BOLTED;

DATA          OBJ_WRENCH_DESC_FN;
DATA          RM_ENTER;
DATA          OBJ_TAKE_WRENCH;

DATA          OBJ_POLE_DESC_FN;
DATA          RM_ENTER;
DATA          OBJ_TAKE_OK;

DATA          OBJ_BOLTS_DESC_FN;
DATA          RM_ENTER;
DATA          OBJ_TAKE_SECURE;

DATA          OBJ_SHELVES_DESC_FN;
DATA          RM_GRIMY;
DATA          OBJ_TAKE_FIXED;

DATA          OBJ_BARREL_DESC_FN;
DATA          RM_GRIMY;
DATA          OBJ_TAKE_TOO_HEAVY;

DATA          OBJ_LAMP_DESC_FN;
DATA          RM_GRIMY;
DATA          OBJ_TAKE_OK;

DATA          OBJ_SPIDERS_DESC_FN;
DATA          RM_GRIMY;
DATA          OBJ_TAKE_OK;
# -----------------------------------
# CARRIED OBJECTS
# -----------------------------------
CONST MAX_CARRIED 4;
VAR NUM_CARRIED:1=0;
VAR CARRIED:4=0;
FN:1 CARRIED_OBJ(I:1) {
  RETURN (@CARRIED)[I,1];
}
FN SET_CARRIED(I:1,OBJ:1) {
  SET (@CARRIED)[I,1]=OBJ;
}
# -----------------------------------
# OBJECT(S) ACTED ON
# -----------------------------------
VAR FOCUS_OBJ:1;
VAR SECOND_OBJ:1;
# -----------------------------------
# WAS OBJECT DROPPED?
# -----------------------------------
CONST DROPPED_FLAG $80;

FN:1 WAS_DROPPED(OBJ:1) {
  RETURN NOT ((OBJ_RM(OBJ) AND DROPPED_FLAG)=0);
}
# -----------------------------------
# IS OBJECT HERE?
# -----------------------------------
FN:1 IS_HERE(OBJ:1,RM:1) {
  RETURN IS_CARRIED(OBJ) OR
   IS_IN_ROOM(OBJ,RM);
}
FN:1 IS_CARRIED(OBJ:1) {
  RETURN (OBJ_RM(OBJ)=RM_TAKEN);
}
FN:1 IS_IN_ROOM(OBJ:1,RM:1) {
  RETURN (OBJ_RM(OBJ) AND $7F)=RM;
}
# -----------------------------------
# OBJECT TAKE FUNCTIONS
# -----------------------------------
DATA MSG_TAKEN "TAKEN";
DATA MSG_TOO_MANY "YOU ARE CARRYING TOO MANY ITEMS.";

FN OBJ_TAKE_OK() {
  VAR RM_PTR:2;
  IF (NUM_CARRIED < MAX_CARRIED) {
    PRINT_WORDS(MSG_TAKEN);
    SET RM_PTR=OBJ_RM_PTR(FOCUS_OBJ);
    SET RM_PTR[0,1]=RM_TAKEN;
    SET (@CARRIED)[NUM_CARRIED,1]=FOCUS_OBJ;
    INCR NUM_CARRIED;
  }
  ELSE {
    PRINT_WORDS(MSG_TOO_MANY);
  }
}

DATA MSG_BOLTED "IT IS BOLTED IN PLACE.";

FN OBJ_TAKE_BOLTED() {
  PRINT_WORDS(MSG_BOLTED);
}

DATA SECURE "THEY ARE SECURE.";

FN OBJ_TAKE_SECURE() {
  PRINT_WORDS(SECURE);
}

DATA TOO_HEAVY "IT IS TOO HEAVY.";

FN OBJ_TAKE_TOO_HEAVY() {
  PRINT_WORDS(TOO_HEAVY);
}

DATA FIXED "THEY ARE FIXED IN PLACE.";
FN OBJ_TAKE_FIXED() {
  PRINT_WORDS(FIXED);
}

DATA MSG_OOR "YOU REACH FOR THE WRENCH, BUT IT IS JUST BEYOND THE GRASP OF YOUR OUTSTRETCHED HAND.";

DATA MSG_SNAG "WITH SOME CAREFUL MANEUVERING, YOU MANAGE TO SNAG THE WRENCH WITH THE HOOK OF THE POLE AND BRING IT WITHIN YOUR REACH.\$0D\$0D";

FN OBJ_TAKE_WRENCH() {
  IF (SECOND_OBJ=OBJ_POLE) {
    IF (NOT IS_CARRIED(OBJ_POLE)) {
      SET (OBJ_RM_PTR(OBJ_POLE))[0,1]=
        RM_ENTER OR DROPPED_FLAG;
    }
    PRINT_WORDS(MSG_SNAG);
    SET (OBJ_TAKE_PTR(OBJ_WRENCH))[0,2]=OBJ_TAKE_OK;
    OBJ_TAKE_OK();
  }
  ELSE {
    PRINT_WORDS(MSG_OOR);
  }
}
# -----------------------------------
# OBJECT FIELD GETTERS
# -----------------------------------
FN:2 OBJ_BASE(OBJ:1) {
  RETURN OBJ_DATA+OBJ*OBJ_DATA_SIZE;
}
FN:2 OBJ_DESC_PTR(OBJ:1) {
  RETURN OBJ_BASE(OBJ)+OBJ_DESC_IDX;
}
FN:2 OBJ_DESC_FN(OBJ:1) {
#  RETURN (OBJ_BASE(OBJ)+OBJ_DESC_IDX)[0,2];
  RETURN OBJ_DESC_PTR(OBJ)[0,2];
}
FN:2 OBJ_RM_PTR(OBJ:1) {
  RETURN OBJ_BASE(OBJ)+OBJ_RM_IDX;
}
FN:1 OBJ_RM(OBJ:1) {
  RETURN OBJ_RM_PTR(OBJ)[0,1];
}
FN:2 OBJ_TAKE_PTR(OBJ:1) {
  RETURN OBJ_BASE(OBJ)+OBJ_TAKE_IDX;
}
FN:2 OBJ_TAKE_FN(OBJ:1) {
  RETURN OBJ_TAKE_PTR(OBJ)[0,2];
}
