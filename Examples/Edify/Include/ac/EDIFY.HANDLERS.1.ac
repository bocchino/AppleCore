# -----------------------------------
# EDIFY COMMAND HANDLERS, PART 1
# -----------------------------------
# (A)PPEND
# -----------------------------------
DATA A_MSG "TYPE LINES TO APPEND, BLANK LINE TO END\$0D";

FN A_HANDLER() {
  VAR LEN:1;
  SET MODIFIED=TRUE;
  IF (EQ_CHAR(READ_CHAR(),'B')) {
    NEXT_CHAR();
    TODO();
  }
  ELSE IF (EQ_CHAR(READ_CHAR(),'L')) {
    NEXT_CHAR();
    IF ((@FILE_NAME)[0,1]=0)
      ERROR(FILE_NAME_NOT_SET);
    ELSE
      READ_AND_APPEND();
  }
  ELSE IF (EQ_CHAR(READ_CHAR(),'T')) {
    NEXT_CHAR();
    SET MON_IN[0,1]=0;
    BUF_APPEND_LINE(MON_IN,0);
  }
  ELSE {
    PRINT_STRING(A_MSG);
    WHILE (TRUE) {
      SET LEN=GET_BUF_LINE(BUF_SIZE+1);
      IF (LEN=0) RETURN;
      BUF_APPEND_LINE(MON_IN,LEN);
    }
  }
}
# -----------------------------------
# PRINT CLIP(B)OARD
# -----------------------------------
FN B_HANDLER() {
  TODO();
}
# -----------------------------------
# (C)LEAR BUFFER
# -----------------------------------
DATA CLEAR_MSG "CLEAR BUFFER (Y/N)? ";

FN C_HANDLER() {
  VAR CH:1;
  GET_INPUT(CLEAR_MSG);
  IF (EQ_CHAR(MON_IN[0,1],'Y'))
    CLEAR_BUFFER();
  SET MODIFIED=FALSE;
}
# -----------------------------------
# (D)ELETE LINE
# -----------------------------------
FN D_HANDLER() {
  IF (BUF_SIZE=0)
    ERROR(BUFFER_EMPTY);
  ELSE
    BUF_DELETE_LINE();
}
# -----------------------------------
# (E)NDING LINE
# -----------------------------------
DATA ENDING_LINE "ENDING LINE=";

FN E_HANDLER() {
  IF (BUF_SIZE=0)
    ERROR(BUFFER_EMPTY);
  ELSE {
    PRINT_STRING(ENDING_LINE);
    PRINT_NUM(BUF_SIZE);
    MON_CROUT();
  }
}
# -----------------------------------
# (F)ILE
# -----------------------------------
DATA FNAME "FILE NAME=";

FN F_HANDLER() {
  IF (EQ_CHAR(READ_CHAR(),BINDING_CHAR)) {
    NEXT_CHAR();
    IF (EQ_CHAR(READ_CHAR(),NO_CHAR))
      ERROR(EXPECTED_FILE_NAME);
    ELSE
      SET (@FILE_NAME)[0,32]=
        MON_IN[INPUT_IDX,32];
    SET INPUT_IDX=INPUT_LEN;
  }
  ELSE IF ((@FILE_NAME)[0,1]=0)
    ERROR(FILE_NAME_NOT_SET);
  ELSE {
    PRINT_STRING(FNAME);
    PRINT_STRING(@FILE_NAME);
    MON_CROUT();
  }
}
# -----------------------------------
# (H)ELP
# -----------------------------------
DATA HELP_FILE_NAME "EDIFY.HELP.TXT";

FN H_HANDLER() {
  VAR LN:1=0;
  ISSUE_DOS_CMD(DOS_OPEN,HELP_FILE_NAME);
  ISSUE_DOS_CMD(DOS_READ,HELP_FILE_NAME);
  IF (NOT ERR_FLAG) {
    WHILE (DOS_ERRNO[0,1]=0) {
      READ_LINE();
      MON_CROUT();
      IF (DOS_ERRNO[0,1]=0) {
        PRINT_STRING(MON_IN);
	MON_CROUT();
      }
      INCR LN;
      IF (LN >= MON_WNDBTM[0,1]-3) {
        SET ^A=' '+$80;
        MON_KEYIN();
	SET LN=0;
      }
    }
    PRINT_STRING(DOS_CLOSE);
  }
}
# -----------------------------------
# (I)NSERT
# -----------------------------------
DATA I_MSG "TYPE LINES TO INSERT, BLANK LINE TO END\$0D";

FN I_HANDLER() {
  VAR LEN:1;
  IF (BUF_SIZE=0)
    A_HANDLER();
  ELSE IF (EQ_CHAR(READ_CHAR(),'B')) {
    NEXT_CHAR();
    TODO();
  }
  ELSE IF (EQ_CHAR(READ_CHAR(),'L')) {
    NEXT_CHAR();
    IF ((@FILE_NAME)[0,1]=0)
      ERROR(FILE_NAME_NOT_SET);
    ELSE
      READ_AND_INSERT();
  }
  ELSE IF (EQ_CHAR(READ_CHAR(),'T')) {
    NEXT_CHAR();
    SET MON_IN[0,1]=0;
    BUF_INSERT_LINE(MON_IN,0);
  }
  ELSE {
    PRINT_STRING(I_MSG);
    WHILE (TRUE) {
      SET LEN=GET_BUF_LINE(N);
      IF (LEN=0) RETURN;
      BUF_INSERT_LINE(MON_IN,LEN);
    }
  }
}
# -----------------------------------
# MAR(K)
# -----------------------------------
FN K_HANDLER() {
  VAR NEW_K:2;
  IF (EQ_CHAR(READ_CHAR(),BINDING_CHAR)) {
    NEXT_CHAR();
    SET NEW_K=PARSE_NUM();
    IF (NOT ERR_FLAG) {
      IF (NEW_K < 1 OR NEW_K > BUF_SIZE)
        ERROR(OUT_OF_RANGE);
      ELSE
        SET_K(NEW_K);
    }
  }
  ELSE IF (BUF_SIZE=0)
    ERROR(BUFFER_EMPTY);
  ELSE IF (K=NO_K)
    ERROR(MARK_NOT_SET);
  ELSE PRINT_LINE(K_PTR,K);
}
