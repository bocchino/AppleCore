# -----------------------------------
# EDIFY: EDIT BUFFER
# -----------------------------------
# BUFFER MODIFIED?
VAR MODIFIED:1=FALSE;
# NUMBER OF LINES IN BUFFER
VAR BUF_SIZE:2=0;
# START OF BUFFER
VAR BUF_START:2;
# END OF BUFFER
VAR BUF_END:2;
# NUMBER OF LINE BEING EDITED
VAR N:2;
# PTR TO LINE BEING EDITED
VAR N_PTR:2;
# -----------------------------------
# CLEAR THE BUFFER
# -----------------------------------
FN CLEAR_BUFFER() {
  SET BUF_SIZE=0;
  SET BUF_END=BUF_START;
  SET CB_END=CB_START;  
  SET N=1;
  SET N_PTR=BUF_START;
}
# -----------------------------------
# GET LINE TO ADD TO BUFFER
# -----------------------------------
FN:1 GET_BUF_LINE(NUM:1) {
  IF (PRINT_LINE_NUMS) {
    PRINT_LINE_NUM(NUM);
    PRINT_CHAR(' ');
  }
  RETURN GET_LINE();
}
# -----------------------------------
# APPEND LINE TO BUFFER
# -----------------------------------
FN BUF_APPEND_LINE(STR:2,LEN:1) {
  SET BUF_END[0,1]=LEN;
  INCR BUF_END;
  COPY(STR,LEN+1,BUF_END);
  SET BUF_END=BUF_END+LEN+1;
  SET BUF_END[0,1]=LEN;
  INCR BUF_END;
  INCR BUF_SIZE;
}
# -----------------------------------
# INSERT LINE INTO BUFFER
# -----------------------------------
FN BUF_INSERT_LINE(STR:2,LEN:1) {
  COPY_UP(N_PTR,BUF_END-N_PTR+1,N_PTR+LEN+3);
  SET BUF_END=BUF_END+LEN+3;
  SET N_PTR[0,1]=LEN;
  COPY(STR,LEN+1,N_PTR+1);
  SET N_PTR[LEN+2,1]=LEN;
  SET_N(N+1);
  INCR BUF_SIZE;
}
# -----------------------------------
# DELETE CURRENT LINE FROM BUFFER
# -----------------------------------
FN BUF_DELETE_LINE() {
  VAR SAVED_N:2=N;
  VAR SAVED_N_PTR:2=N_PTR;
  VAR LEN:2;
  IF (BUF_SIZE=1)
    CLEAR_BUFFER();
  ELSE IF (N=BUF_SIZE) {
    SET BUF_END=N_PTR;
    DECR BUF_SIZE;
    SET_N(BUF_SIZE);
  }
  ELSE {
    SET_N(N+1);
    SET LEN=BUF_END-N_PTR;
    COPY(N_PTR,LEN,SAVED_N_PTR);    
    SET BUF_END[0,2]=SAVED_N_PTR+LEN;
    SET N=SAVED_N;
    SET N_PTR=SAVED_N_PTR;
    DECR BUF_SIZE;
  }
}
# -----------------------------------
# PRINT A LINE OF THE BUFFER
# -----------------------------------
FN PRINT_LINE(LINE_PTR:2,LINE_NUM:2) {
  IF (PRINT_LINE_NUMS) {
    PRINT_LINE_NUM(LINE_NUM);
    PRINT_CHAR(' ');
  }
  PRINT_STRING(LINE_PTR+1);  
  MON_CROUT();
}
# -----------------------------------
# PRINT A FORMATTED LINE NUMBER
# -----------------------------------
DATA PLACES     1000;
DATA 		 100;
DATA		   0;
DATA		  10;
DATA		   0;

FN PRINT_LINE_NUM(LINE_NUM:2) {
  VAR I:1=0;
  INVERSE();
  WHILE (I<3) {
    IF (LINE_NUM < PLACES[I<<1,2])
      PRINT_CHAR('0');
    INCR I;
  }  
  PRINT_NUM(LINE_NUM);
  NORMAL();
}
# -----------------------------------
# PRINT A DECIMAL NUMBER
# -----------------------------------
FN PRINT_NUM(NUM:2) {
  NUM_TO_STR(@NUM,2,10,@NUM_STR);
  PRINT_STRING(@NUM_STR);
}
# -----------------------------------
# SET N AND N_PTR
# -----------------------------------
FN SET_N(NEW_N:2) {
  WHILE (N < NEW_N) {
    NEXT_LINE_PTR(@N_PTR);
    INCR N;
  }
  WHILE (N > NEW_N) {
    PREV_LINE_PTR(@N_PTR);
    DECR N;
  }
}
# -----------------------------------
# NEXT LINE PTR
# -----------------------------------
FN NEXT_LINE_PTR(LINE_PTR_PTR:2) {
  VAR LINE_PTR:2=LINE_PTR_PTR[0,2];
  SET LINE_PTR_PTR[0,2]=LINE_PTR+LINE_PTR[0,1]+3;
}
# -----------------------------------
# PREV LINE PTR
# -----------------------------------
FN PREV_LINE_PTR(LINE_PTR_PTR:2) {
  VAR LINE_PTR:2=LINE_PTR_PTR[0,2]-1;
  SET LINE_PTR_PTR[0,2]=LINE_PTR-LINE_PTR[0,1]-2;
}
# -----------------------------------
# COPY DATA
# -----------------------------------
FN COPY(START:2,LEN:2,DEST:2) {
  SET ^Y=0;
  SET MON_A1[0,2]=START;
  SET MON_A2[0,2]=START+LEN-1;
  SET MON_A4[0,2]=DEST;
  MON_MOVE();
}

FN COPY_UP(START:2,LEN:2,DEST:2) {
  WHILE (LEN > 0) {
    SET DEST[LEN-1,1]=START[LEN-1,1];
    DECR LEN;
  }
}

